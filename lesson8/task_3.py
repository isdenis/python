# 3. Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
# Проверить работу исключения на реальном примере. Необходимо запрашивать у пользователя данные и заполнять список.
# Класс-исключение должен контролировать типы данных элементов списка.

# Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока пользователь сам не остановит работу
# скрипта, введя, например, команду “stop”. При этом скрипт завершается, сформированный список выводится на экран.

# Подсказка: для данного задания примем, что пользователь может вводить только числа и строки. При вводе пользователем
# очередного элемента необходимо реализовать проверку типа элемента и вносить его в список, только если введено число.
# Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить соответствующее сообщение.
# При этом работа скрипта не должна завершаться.

class CheckList(Exception):
    def __init__(self, err):
        self.err = err


a = []
stop = ""
while stop != "stop":
    list_number = list(input("Введите число/числа через пробел. Они будут добавляться в список, "
                             "который отобразится после остановки. Для остановки введите stop: ").split())
    for i in list_number:
        if i.lower() == "stop":
            print("Работа остановлена, финальный список: ")
            stop = i.lower()
        elif i.isnumeric() is True:
            a.append(i)
        elif i.isnumeric() is False:
            try:
                pass
                raise CheckList("Ошибка! Одно из введенных значений не является цифровым "
                                "и не будет добавлено в список.")
            except CheckList as error:
                print(error)
    print(a)
